{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ebb073e0f9b3e5328ee8","webpack:///./src/index.js","webpack:///./src/georss-to-geojson.js","webpack:///./src/get-geometry.js","webpack:///./src/get-feature-geometry.js"],"names":["RssToGeoJson","rss","getPolygonGeometry","rawGeometry","coordinates","rawCoordinates","split","forEach","coordinate","i","latitude","parseFloat","longitude","Error","push","getFeatureGeometry","item","geometry","_text"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC7DA;;;;;;QAGEA,Y;;;;;;;;;;;;;;;;ACHF;;;;;;;;IAEMA,Y;;;;;;;4BACYC,G,EAAK;AACnB,aAAQ;AACN,gBAAQ,SADF;AAEN,oBAAY,kCAAmBA,GAAnB;AAFN,OAAR;AAID;;;;;;kBAGYD,Y;;;;;;;;;;;;;;ACXf,IAAME,qBAAqB,SAArBA,kBAAqB,CAACC,WAAD,EAAiB;AAC1C,MAAMC,cAAc,EAApB;AACA,MAAMC,iBAAiBF,YAAYG,KAAZ,CAAkB,GAAlB,CAAvB;AACAD,iBAAeE,OAAf,CAAuB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AACxC,QAAIA,MAAM,CAAN,IAAW,EAAEA,IAAI,CAAN,CAAf,EAAyB;AACvB,UAAMC,WAAWC,WAAWN,eAAeI,CAAf,CAAX,CAAjB;AACA,UAAMG,YAAYD,WAAWN,eAAeI,IAAI,CAAnB,CAAX,CAAlB;AACA,UAAIG,cAAc,WAAd,IAA6BF,aAAa,WAA9C,EAA2D;AACzD,cAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;AACD;AACDT,kBAAYU,IAAZ,CAAiB,CAACF,SAAD,EAAYF,QAAZ,CAAjB;AACD;AACF,GATD;AAUA,SAAO;AACL,YAAQ,SADH;AAEL,mBAAe,CAACN,WAAD;AAFV,GAAP;AAID,CAjBD;;QAoBEF,kB,GAAAA,kB;;;;;;;;;;;;;;ACpBF;;AAIA,IAAMa,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACnC,MAAIC,iBAAJ;;AAEA,MAAID,KAAK,gBAAL,CAAJ,EAA4B;AAC1B,QAAMb,cAAca,KAAK,gBAAL,EAAuBE,KAA3C;AACAD,eAAW,qCAAmBd,WAAnB,CAAX;AACD,GAHD,MAGO;AACL,UAAM,IAAIU,KAAJ,CAAU,sBAAV,CAAN;AACD;AACD,SAAOI,QAAP;AACD,CAVD;;kBAYeF,kB","file":"georss-to-geojson.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"georss-to-geojson\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"georss-to-geojson\"] = factory();\n\telse\n\t\troot[\"georss-to-geojson\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ebb073e0f9b3e5328ee8","import RssToGeoJson from './georss-to-geojson.js'\n\nexport {\n  RssToGeoJson\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import getFeatureGeometry from './get-feature-geometry'\n\nclass RssToGeoJson {\n  static convert (rss) {\n    return ({\n      'type': 'Feature',\n      'geometry': getFeatureGeometry(rss)\n    })\n  }\n}\n\nexport default RssToGeoJson\n\n\n\n// WEBPACK FOOTER //\n// ./src/georss-to-geojson.js","const getPolygonGeometry = (rawGeometry) => {\n  const coordinates = []\n  const rawCoordinates = rawGeometry.split(' ')\n  rawCoordinates.forEach((coordinate, i) => {\n    if (i === 0 || !(i % 2)) {\n      const latitude = parseFloat(rawCoordinates[i])\n      const longitude = parseFloat(rawCoordinates[i + 1])\n      if (longitude === 'undefined' || latitude === 'undefined') {\n        throw new Error('Error in coordinates format')\n      }\n      coordinates.push([longitude, latitude])\n    }\n  })\n  return {\n    'type': 'Polygon',\n    'coordinates': [coordinates]\n  }\n}\n\nexport {\n  getPolygonGeometry\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/get-geometry.js","import {\n  getPolygonGeometry\n} from './get-geometry'\n\nconst getFeatureGeometry = (item) => {\n  let geometry\n\n  if (item['georss:polygon']) {\n    const rawGeometry = item['georss:polygon']._text\n    geometry = getPolygonGeometry(rawGeometry)\n  } else {\n    throw new Error('Unknown feature type')\n  }\n  return geometry\n}\n\nexport default getFeatureGeometry\n\n\n\n// WEBPACK FOOTER //\n// ./src/get-feature-geometry.js"],"sourceRoot":""}